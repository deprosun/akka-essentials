akka {
  loglevel = DEBUG
}

mySpecialConfig {
  akka {
    loglevel = INFO
  }
}

# time assertion test config
specialTimeAssertionsConfig {
  akka.test.single-expect-default = 0.3s
}

#intercepting log messages
interceptingLogMessages {
  akka {
    loglevel = INFO
    loggers = ["akka.testkit.TestEventListener"]
    test {
      filter-leeway = 5s
    }
  }
}

#routers demo
routersDemo {
  akka {
    actor.deployment { //very important for routing
      /poolMaster2 { //this is going to be the name of the ACTOR that I am going to instantiate
        router = round-robin-pool //what type of pool
        nr-of-instances = 5 //number of instances = 5
      }

      /groupMaster2 {
        router = round-robin-group
        routees.paths = ["/user/slave_1", "/user/slave_2", "/user/slave_3", "/user/slave_4", "/user/slave_5"]
      }
    }
  }
}

#dispatcher demo

my-dispatcher {
  //there are other types of dispatchers, Dispatcher is default and basic
  type = Dispatcher #
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 1
  }
  throughput = 30
}

dispatchersDemo {
  akka.actor.deployment {
    /rtjvm {
      dispatcher = my-dispatcher
    }
  }
}


mailboxesDemo {

  //mailboxes demo
  support-ticket-dispatcher {
    mailbox-type = "part5infra.Mailboxes$SupportTickerPriorityMailbox"
  }

  control-mailbox {
    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
  }

  akka.actor.deployment {
    /altConrolAwareActor {
      mailbox = control-mailbox
    }
  }

}